var _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key]}}}return target};import React from 'react';import _ from 'lodash';import Classnames from 'classnames';export function Grid(props){var class_name=props.fluid?'container':'container-fluid';var class_list=Classnames(props.className,class_name);return React.createElement('div',_extends({},props,{className:class_list}),props.children)}export function Row(props){var class_list=Classnames(props.className,'row');return React.createElement('div',_extends({},props,{className:class_list}),props.children)}export function Col(props){var leftover_props={};var class_list=_.map(props,(val,key) => {if(_.includes(['xs','sm','md','lg'],key)){return `col-${ key }-${ val }`}else if(_.includes(['xsOffset','smOffset','mdOffset','lgOffset'],key)){return `col-${ _.kebabCase(key) }-${ val }`}return false});var class_string=Classnames(...class_list,props.className);return React.createElement('div',_extends({},props,{className:class_string}),props.children)}